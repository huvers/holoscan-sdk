# SPDX-FileCopyrightText: Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the \"License\");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmake_minimum_required(VERSION 3.20)
project(holoviz_examples_cpp CXX)

# Finds the package holoscan
find_package(holoscan REQUIRED CONFIG
             PATHS "/opt/nvidia/holoscan" "/workspace/holoscan-sdk/install")

add_executable(holoviz_camera
  holoviz_camera.cpp
)

target_link_libraries(holoviz_camera
  PRIVATE
  holoscan::core
  holoscan::ops::holoviz
)

add_executable(holoviz_geometry
  holoviz_geometry.cpp
)

target_link_libraries(holoviz_geometry
  PRIVATE
  holoscan::core
  holoscan::ops::holoviz
  holoscan::ops::video_stream_replayer
)

# Testing
if(BUILD_TESTING)
  set(RECORDING_DIR ${CMAKE_CURRENT_BINARY_DIR}/recording_output)
  set(SOURCE_VIDEO_BASENAME holoviz_geometry_output)
  set(VALIDATION_FRAMES_DIR ${CMAKE_SOURCE_DIR}/testing/validation_frames/holoviz_geometry/)

  file(MAKE_DIRECTORY ${RECORDING_DIR})

  # Patch the current example to enable recording the rendering window
  add_custom_command(OUTPUT holoviz_geometry_test.cpp
    PRE_LINK
    COMMAND patch -u -o holoviz_geometry_test.cpp ${CMAKE_CURRENT_SOURCE_DIR}/holoviz_geometry.cpp
            ${CMAKE_SOURCE_DIR}/testing/validation_frames/holoviz_geometry/cpp_holoviz_geometry.patch
  )

  # Create the test executable
  add_executable(holoviz_geometry_test
                 holoviz_geometry_test.cpp
  )

  target_include_directories(holoviz_geometry_test
    PRIVATE ${CMAKE_SOURCE_DIR}/testing)

  target_compile_definitions(holoviz_geometry_test
    PRIVATE RECORD_OUTPUT RECORDING_DIR="${RECORDING_DIR}"
    PRIVATE SOURCE_VIDEO_BASENAME="${SOURCE_VIDEO_BASENAME}"
  )

  target_link_libraries(holoviz_geometry_test
    PRIVATE
    holoscan::core
    holoscan::ops::holoviz
    holoscan::ops::video_stream_replayer
    holoscan::ops::video_stream_recorder
    holoscan::ops::format_converter
  )

  # Add the test and make sure it runs
  add_test(NAME EXAMPLE_CPP_HOLOVIZ_GEOMETRY_TEST
    COMMAND ${CMAKE_CURRENT_BINARY_DIR}/holoviz_geometry_test --count 10
    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
  )
  set_tests_properties(EXAMPLE_CPP_HOLOVIZ_GEOMETRY_TEST PROPERTIES
    PASS_REGULAR_EXPRESSION "Received camera pose:"
    PASS_REGULAR_EXPRESSION "Reach end of file or playback count reaches to the limit. Stop ticking."
  )

  # Add a test to check the validity of the frames
  add_test(NAME EXAMPLE_CPP_HOLOVIZ_GEOMETRY_RENDER_TEST
      COMMAND python3 ${CMAKE_SOURCE_DIR}/../bin/video_validation.py
      --source_video_dir ${RECORDING_DIR}
      --source_video_basename ${SOURCE_VIDEO_BASENAME}
      --output_dir ${RECORDING_DIR}
      --validation_frames_dir ${VALIDATION_FRAMES_DIR}
      WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
  )

  set_tests_properties(EXAMPLE_CPP_HOLOVIZ_GEOMETRY_RENDER_TEST PROPERTIES
    DEPENDS EXAMPLE_CPP_HOLOVIZ_GEOMETRY_TEST
    PASS_REGULAR_EXPRESSION "Valid video output!"
  )
endif()
