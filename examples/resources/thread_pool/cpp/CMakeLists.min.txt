# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the \"License\");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an \"AS IS\" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cmake_minimum_required(VERSION 3.20)
project(holoscan_ping_simple_thread_pool CXX)

# Finds the package holoscan
find_package(holoscan REQUIRED CONFIG
             PATHS "/opt/nvidia/holoscan" "/workspace/holoscan-sdk/install")

add_executable(ping_simple_thread_pool
  ping_simple_thread_pool.cpp
)

target_link_libraries(ping_simple_thread_pool
  PRIVATE
  holoscan::core
  holoscan::ops::ping_rx
  holoscan::ops::ping_tx
)

# Testing
if(BUILD_TESTING)
  add_test(NAME EXAMPLE_CPP_PING_SIMPLE_THREAD_POOL_TEST
           COMMAND ping_simple_thread_pool
           WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
          )
  set_tests_properties(EXAMPLE_CPP_PING_SIMPLE_THREAD_POOL_TEST PROPERTIES
    ENVIRONMENT "HOLOSCAN_LOG_LEVEL=DEBUG"
    # Note: the following regular expressions are specific to the logging within GXF itself not Holoscan
    PASS_REGULAR_EXPRESSION "ThreadPool \\[cid: \\d+, name: pool1\\] created thread \\[uid: \\d+\\] for pinned entity \\[eid: \\d+, name: tx1\\]"
    PASS_REGULAR_EXPRESSION "ThreadPool \\[cid: \\d+, name: pool1\\] created thread \\[uid: \\d+\\] for pinned entity \\[eid: \\d+, name: rx2\\]"
    PASS_REGULAR_EXPRESSION "ThreadPool \\[cid: \\d+, name: pool2\\] created thread \\[uid: \\d+\\] for pinned entity \\[eid: \\d+, name: tx2\\]"
    PASS_REGULAR_EXPRESSION "ThreadPool \\[cid: \\d+, name: pool2\\] created thread \\[uid: \\d+\\] for pinned entity \\[eid: \\d+, name: rx2\\]"
    PASS_REGULAR_EXPRESSION "Rx message value: 10"
    PASS_REGULAR_EXPRESSION "Rx message value: 15"
  )
endif()
